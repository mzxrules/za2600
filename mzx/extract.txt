wait 1

: "q"
set "CHAR" to "('SS_ITEM')"
loop start
inc "$" by "SprItem&loopcount&:\n"
set "sp&sp&" to 8
goto "#dumpchr"
inc "$" by "$dumpchr"
inc "CHAR" by 1
loop for 31
set "$sht" to "spr/spr_item.asm"
goto "#dumpsht"

set "CHAR" to "('SS_N0L')"
loop start
inc "$" by "SprN&loopcount&_L:\n"
set "sp&sp&" to 8
goto "#dumpchr"
inc "$" by "$dumpchr"
inc "CHAR" by 1
loop for 15
set "$sht" to "spr/spr_num_l.asm"
goto "#dumpsht"

set "CHAR" to "('SS_N0R')"
loop start
inc "$" by "SprN&loopcount&_R:\n"
set "sp&sp&" to 8
goto "#dumpchr"
inc "$" by "$dumpchr"
inc "CHAR" by 1
loop for 15
set "$sht" to "spr/spr_num_r.asm"
goto "#dumpsht"

set "CHAR" to "('SS_MAP')"
loop start
inc "$" by "SprMap&loopcount&:\n"
set "sp&sp&" to 8
goto "#dumpchr"
inc "$" by "$dumpchr"
inc "CHAR" by 1
loop for 9
set "$sht" to "spr/spr_map.asm"
goto "#dumpsht"


set "CHAR" to "('SS_PL')"
loop start
inc "$" by "SprP&loopcount&:\n"
set "sp&sp&" to 8
goto "#dumpchr"
inc "$" by "$dumpchr"
inc "CHAR" by 1
loop for 4
set "$sht" to "spr/spr_pl.asm"
goto "#dumpsht"

loop start
inc "$" by "SprS&loopcount&:\n"
set "sp&sp&" to 8
goto "#dumpchr"
inc "$" by "$dumpchr"
inc "CHAR" by 1
loop for 2
set "$sht" to "spr/spr_sh.asm"
goto "#dumpsht"

set "CHAR" to "('SS_EN')"
loop start
inc "$" by "SprE&loopcount&:\n"
set "sp&sp&" to 8
goto "#dumpchr"
inc "$" by "$dumpchr"
inc "CHAR" by 1
loop for 31
set "$sht" to "spr/spr_en.asm"
goto "#dumpsht"

. "Gohma Boss"
set "CHAR" to "(96)"
loop start
inc "$" by "SprGohma&loopcount&:\n"
set "sp&sp&" to 9
goto "#dumpchr"
inc "$" by "$dumpchr"
inc "CHAR" by 1
loop for 5
set "$sht" to "spr/spr_gohma.asm"
goto "#dumpsht"

set "CHAR" to "(69)"
loop start
inc "$" by "SprWaterfall&loopcount&:\n"
set "sp&sp&" to 8
goto "#dumpchr"
inc "$" by "$dumpchr"
inc "CHAR" by 1
loop for 4
set "$sht" to "spr/spr_waterfall.asm"
goto "#dumpsht"

set "CHAR" to "(74)"
loop start
inc "$" by "SprRock&loopcount&:\n"
set "sp&sp&" to 8
goto "#dumpchr"
inc "$" by "$dumpchr"
inc "CHAR" by 1
loop for 0
set "$sht" to "spr/spr_rock.asm"
goto "#dumpsht"


set "$pf1" to ""
set "$pf2" to ""

. "World PF1 Sheet"
loop start
set "mirror" 0
set "CHAR" ('loopcount'+'SS_ROOM'+32)
inc "$pf1" "PF1Room('loopcount'):\n"
set "sp&sp&" 4
goto "#dumpchr"
inc "$pf1" "$dumpchr"
set "CHAR" ('loopcount'+'SS_ROOM')
set "sp&sp&" 14
set "yl_" 2
goto "#dumpchr"
inc "$pf1" "$dumpchr"
loop 31

. "World PF2 Sheet"
loop start
set "mirror" 1
set "CHAR" ('loopcount'+'SS_ROOM'+64+32)
inc "$pf2" "PF2Room('loopcount'):\n"
set "sp&sp&" 4
goto "#dumpchr"
inc "$pf2" "$dumpchr"
set "CHAR" ('loopcount'+'SS_ROOM'+64)
set "sp&sp&" 14
set "yl_" 2
goto "#dumpchr"
inc "$pf2" "$dumpchr"
loop 31

set "$" to "$pf1"
set "$sht" to "spr/spr_room_pf1.asm"
goto "#dumpsht"
set "$" to "$pf2"
set "$sht" to "spr/spr_room_pf2.asm"
goto "#dumpsht"

set "$pf1" to ""
set "$pf2" to ""


. "Dungeon PF1 Sheet"
loop start
set "mirror" 0
set "CHAR" ('loopcount'+'SS_ROOM'+32+128)
inc "$pf1" "PF1Room('loopcount'):\n"
set "sp&sp&" 4
goto "#dumpchr"
inc "$pf1" "$dumpchr"
set "CHAR" ('loopcount'+'SS_ROOM'+128)
set "sp&sp&" 14
set "yl_" 2
goto "#dumpchr"
inc "$pf1" "$dumpchr"
loop 31

. "Dungeon PF2 Sheet"
loop start
set "mirror" 1
set "CHAR" ('loopcount'+'SS_ROOM'+64+32+128)
inc "$pf2" "PF2Room('loopcount'):\n"
set "sp&sp&" 4
goto "#dumpchr"
inc "$pf2" "$dumpchr"
set "CHAR" ('loopcount'+'SS_ROOM'+64+128)
set "sp&sp&" 14
set "yl_" 2
goto "#dumpchr"
inc "$pf2" "$dumpchr"
loop 31

set "$" to "$pf1"
set "$sht" to "spr/spr_room_pf1B.asm"
goto "#dumpsht"
set "$" to "$pf2"
set "$sht" to "spr/spr_room_pf2B.asm"
goto "#dumpsht"

set "$pf1" to ""
set "$pf2" to ""
end

: "#dumpsht"
set "&$sht&" to "fwrite_open"
set "$" to "fwrite"
set "" to "fwrite_open"
set "$" to ""
goto "#return"

. "===================="
: "#dumpchr"
. "Dumps the data for the current char in atari format"
. "sp[0] = num lines"
. "yl_ = offset from top"
. "===================="
set "$dumpchr" to ""
set "char_x" to "('CHAR'%32*8)"
set "char_y" to "('CHAR'/32*14+'yl_')"
set "yl" to "yl_"
: "yloop"
set "$lineb" to ""
set "byte" to "yl"
set "b" to "char_byte"
. "loop for pixel diagram of char_byte line"
set "xl" to 0
: "xloop"
set "chr" "('b'a(1<<(7-'xl'))>0)"
set "chr" to "(88-46*'chr'+46)"
set "$lineb.('xl')" to "chr"
inc "char_x" by 1
inc "xl" by 1
if "xl" < 8 then "xloop"

set "$lineb" to "|&$lineb&|"
if "mirror" != 1 then "skip_invchar"
inc "$lineb" by " mirrored"
set "b" to "(('b' a 0x55 << 1) o ('b' a 0xAA >> 1))"
set "b" to "(('b' a 0x33 << 2) o ('b' a 0xCC >> 2))"
set "b" to "(('b' a 0x0F << 4) o ('b' a 0xF0 >> 4))"
: "skip_invchar"
set "$hex" to "&$x2_('b')&"
set "$line&yl&" to "    .byte $&$hex& ; &$lineb&\n"
dec "char_x" by 8
inc "char_y" by 1
inc "yl" by 1
if "yl" < "sp('sp')" then "yloop"
: "flip_char"
dec "yl" by 1
inc "$dumpchr" by "$line&yl&"
if "yl" > "yl_" then "flip_char"
set "yl_" to 0
goto "#return"

